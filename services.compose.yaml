services:
  geodata:
    image: ghcr.io/wisdom-oss/service-geo-data-rest:${BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: &dbDependency
      db:
        condition: service_healthy
        restart: true
        required: true
    environment: &dbEnvironment
      PG_HOST: ${PG_HOST:-db}
      PG_USER: ${PG_USER:-postgres}
      PG_PASS_FILE: /run/secrets/postgres-password
      PG_PORT: ${PG_PORT:-5432}
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.geodata.rule=PathPrefix(`/geodata`)"
      - "traefik.http.middlewares.geodata.stripprefix.prefixes=/geodata"  

  consumers:
    image: ghcr.io/wisdom-oss/service-consumers:${BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: *dbDependency
    environment: *dbEnvironment
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.consumers.rule=PathPrefix(`/consumers`)"
      - "traefik.http.middlewares.consumers.stripprefix.prefixes=/consumers"
  
  water-rights:
    image: ghcr.io/wisdom-oss/service-water-rights:${BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: *dbDependency
    environment: *dbEnvironment
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.waterRights.rule=PathPrefix(`/water-rights`)"
      - "traefik.http.middlewares.waterRights.stripprefix.prefixes=/water-rights"
  
  usage-forecasts:
    image: ghcr.io/wisdom-oss/service-usage-forecasts:${BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: *dbDependency
    environment: *dbEnvironment
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.usageForecasts.rule=PathPrefix(`/water-usage-forecasts`)"
      - "traefik.http.middlewares.usageForecasts.stripprefix.prefixes=/water-usage-forecasts"

  usage-history:
    image: ghcr.io/wisdom-oss/service-usage-history:${BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: *dbDependency
    environment: *dbEnvironment
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.usageHistory.rule=PathPrefix(`/water-usage-history`)"
      - "traefik.http.middlewares.usageHistory.stripprefix.prefixes=/water-usage-history"

  groundwater-levels:
    image: ghcr.io/wisdom-oss/service-groundwater-levels:${BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: *dbDependency
    environment: *dbEnvironment
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.groundwaterLevels.rule=PathPrefix(`/groundwater-levels`)"
      - "traefik.http.middlewares.groundwaterLevels.stripprefix.prefixes=/groundwater-levels"

  dwd-proxy:
    image: ghcr.io/wisdom-oss/dwd-proxy:${BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: *dbDependency
    environment:
      <<: *dbEnvironment
      REDIS_URI: redis://redis:6379
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dwdProxy.rule=PathPrefix(`/dwd`)"
      - "traefik.http.middlewares.dwdProxy.stripprefix.prefixes=/dwd"

  external-datasources:
    image: ghcr.io/wisdom-oss/service-datasource-management:{BRANCH:-latest}
    restart: unless-stopped
    scale: ${SERVICE_REPLICAS:-1}
    depends_on: *dbDependency
    environment:  *dbEnvironment
    secrets:
      - postgres-password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.datasourceManagement.rule=PathPrefix(`/`)"
      - "traefik.http.middlewares.datasourceManagement.stripprefix.prefixes=/dwd"

    
    
