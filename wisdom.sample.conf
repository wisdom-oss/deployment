#====== WISdoM Platform Configuraion ======
# ------------------------------
# PostgreSQL Configuration
# ------------------------------
# In this section you can configure the packaged PostreSQL server or set up the
# connection to an external PostgreSQL server. When using an external PostgreSQL
# server you need to set the "PG_HOST" setting in this file. Furhtermore, the
# external server needs the PostGIS and Timescale extensions installed.
# IMPORTANT: When changing the user or password here and the local database is
# used, the services will loose access since the postgres container only sets
# these values once at the first start up.

# PG_USER
# Required: no
# Default value: postgres
#
# The default user on the packaged PostgreSQL server which is created at the
# first start. If this value is not set it will default to "postgres" via
# variable replacement.
#PG_USER=

# PG_PASS
# Required: no
#
# The password for the default user on the packaged PostgreSQL server. This is
# usually generated during the creation of this configuration file. Therefore,
# there should be no need to set it here. Furthermore, all shipped containers
# use docker secrets to access this password. If any external containers are not
# compatible with docker secrets, set the password here.
#PG_PASS=

# PG_HOST
# Required: no
# Default value: postgres
#
# The host on which the PostgreSQL server resides on. If this value is not set 
# it will default to "postgres" via variable replacement, which is the internal
# server
#PG_HOST=

# PG_PORT
# Required: no
# Default value: 5432
#
# The host on which the PostgreSQL server resides on. If this value is not set 
# it will default to "postgres" via variable replacement, which is the internal
# server
#PG_PORT=

# ------------------------------
# General Service Configuration
# ------------------------------

# SERVICE_BRANCH
# Required: yes
# Default value: latest
#
# The git branch on which is used for the services
BRANCH=latest

# SERVICE_REPLICAS
# Required: no
# Default value: 4
#
# The number of replicas used per backend service
SERVICE_REPLICAS=4

# ------------------------------
# OpenID Connect Configuration
# ------------------------------

# OIDC_ISSUER
# Required: yes
# 
# The auhority handling the OpenID Conect 
#OIDC_ISSUER=

# OIDC_CLIENT_ID
# Required: yes
#
# The Client ID for the Open ID Connect client used in the frontend to 
# authenticate users
#OIDC_CLIENT_ID=